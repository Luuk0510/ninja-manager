@model IEnumerable<ninja_manager.Models.Ninja>

@{
    ViewData["Title"] = "Ninja";
    string deletedNinjaMessage = TempData["DeletedNinjaMessage"] as string;
    string addNinjaMessage = TempData["AddNinjaMessage"] as string;
}

<h1 class="text-center">Ninja overview</h1>
<div class="container  w-50 mx-auto">
    @if (!string.IsNullOrEmpty(deletedNinjaMessage))
    {
        <div class="alert alert-success">
            @Html.Raw(deletedNinjaMessage)
        </div>
    }
    else if (!string.IsNullOrEmpty(addNinjaMessage))
    {
        <div class="alert alert-success">
            @Html.Raw(addNinjaMessage)
        </div>
    }
    <a class="btn btn-outline-primary" asp-action="NinjaFormView">Create a new Ninja</a>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Gold)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.Gold)
                </td>
                <td>
                    <div class="btn-group" role="group">
                            <a class="btn btn-outline-primary" asp-action="DetailsNinjaView" asp-route-ninjaId="@item.Id">Details</a>
                        <a class="btn btn-outline-primary" asp-action="EditNinjaView" asp-route-id="@item.Id">Edit</a>
                        <a class="btn btn-outline-danger" asp-action="DeleteNinjaView" asp-route-id="@item.Id">Delete</a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
</div>
