// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ninja_manager.Models;

#nullable disable

namespace ninja_manager.Migrations
{
    [DbContext(typeof(NinjaContext))]
    [Migration("20231017150645_changedIventory")]
    partial class changedIventory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ninja_manager.Models.Categorie", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Name")
                        .HasName("PK_categorie_1");

                    b.ToTable("categorie", (string)null);

                    b.HasData(
                        new
                        {
                            Name = "Head"
                        },
                        new
                        {
                            Name = "Hands"
                        },
                        new
                        {
                            Name = "Feet"
                        },
                        new
                        {
                            Name = "Necklace"
                        },
                        new
                        {
                            Name = "Chest"
                        },
                        new
                        {
                            Name = "Ring"
                        });
                });

            modelBuilder.Entity("ninja_manager.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Agility")
                        .HasColumnType("int")
                        .HasColumnName("agility");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("category_name")
                        .HasDefaultValueSql("('')");

                    b.Property<double>("Gold")
                        .HasColumnType("float")
                        .HasColumnName("gold");

                    b.Property<int>("Intelligence")
                        .HasColumnType("int")
                        .HasColumnName("intelligence");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<int>("Strength")
                        .HasColumnType("int")
                        .HasColumnName("strength");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CategoryName" }, "IX_equipment_category_name");

                    b.ToTable("equipment", (string)null);
                });

            modelBuilder.Entity("ninja_manager.Models.Inventory", b =>
                {
                    b.Property<int>("NinjaId")
                        .HasColumnType("int")
                        .HasColumnName("ninja_id");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int")
                        .HasColumnName("equipment_id");

                    b.Property<double>("Gold")
                        .HasColumnType("float")
                        .HasColumnName("gold");

                    b.HasKey("NinjaId", "EquipmentId");

                    b.HasIndex(new[] { "EquipmentId" }, "IX_inventory_equipment_id");

                    b.ToTable("inventory", (string)null);
                });

            modelBuilder.Entity("ninja_manager.Models.Ninja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Gold")
                        .HasColumnType("float")
                        .HasColumnName("gold");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("ninja", (string)null);
                });

            modelBuilder.Entity("ninja_manager.Models.Equipment", b =>
                {
                    b.HasOne("ninja_manager.Models.Categorie", "CategoryNameNavigation")
                        .WithMany("Equipments")
                        .HasForeignKey("CategoryName")
                        .IsRequired()
                        .HasConstraintName("FK_equipment_categorie");

                    b.Navigation("CategoryNameNavigation");
                });

            modelBuilder.Entity("ninja_manager.Models.Inventory", b =>
                {
                    b.HasOne("ninja_manager.Models.Equipment", "Equipment")
                        .WithMany("Inventories")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_inventory_equipment");

                    b.HasOne("ninja_manager.Models.Ninja", "Ninja")
                        .WithMany("Inventories")
                        .HasForeignKey("NinjaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_inventory_ninja");

                    b.Navigation("Equipment");

                    b.Navigation("Ninja");
                });

            modelBuilder.Entity("ninja_manager.Models.Categorie", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("ninja_manager.Models.Equipment", b =>
                {
                    b.Navigation("Inventories");
                });

            modelBuilder.Entity("ninja_manager.Models.Ninja", b =>
                {
                    b.Navigation("Inventories");
                });
#pragma warning restore 612, 618
        }
    }
}
