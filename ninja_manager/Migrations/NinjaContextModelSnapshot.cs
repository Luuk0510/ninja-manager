// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ninja_manager.Models;

#nullable disable

namespace ninja_manager.Migrations
{
    [DbContext(typeof(NinjaContext))]
    partial class NinjaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ninja_manager.Models.Categorie", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Name")
                        .HasName("PK_categorie_1");

                    b.ToTable("categorie", (string)null);

                    b.HasData(
                        new
                        {
                            Name = "Head"
                        },
                        new
                        {
                            Name = "Hands"
                        },
                        new
                        {
                            Name = "Feet"
                        },
                        new
                        {
                            Name = "Necklace"
                        },
                        new
                        {
                            Name = "Chest"
                        },
                        new
                        {
                            Name = "Ring"
                        });
                });

            modelBuilder.Entity("ninja_manager.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Agility")
                        .HasColumnType("int")
                        .HasColumnName("agility");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("category_name")
                        .HasDefaultValueSql("('')");

                    b.Property<double>("Gold")
                        .HasColumnType("float")
                        .HasColumnName("gold");

                    b.Property<int>("Intelligence")
                        .HasColumnType("int")
                        .HasColumnName("intelligence");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<int>("Strength")
                        .HasColumnType("int")
                        .HasColumnName("strength");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CategoryName" }, "IX_equipment_category_name");

                    b.ToTable("equipment", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Agility = 10,
                            CategoryName = "Head",
                            Gold = 2.0,
                            Intelligence = 2,
                            Name = "Straw Hat",
                            Strength = 5
                        },
                        new
                        {
                            Id = 2,
                            Agility = -5,
                            CategoryName = "Head",
                            Gold = 50.0,
                            Intelligence = 10,
                            Name = "Iron Helmet",
                            Strength = 27
                        },
                        new
                        {
                            Id = 3,
                            Agility = -20,
                            CategoryName = "Head",
                            Gold = 140.0,
                            Intelligence = 12,
                            Name = "Samurai Helmet",
                            Strength = 75
                        },
                        new
                        {
                            Id = 4,
                            Agility = 10,
                            CategoryName = "Hands",
                            Gold = 10.0,
                            Intelligence = 1,
                            Name = "Wooden Sword",
                            Strength = 10
                        },
                        new
                        {
                            Id = 5,
                            Agility = 45,
                            CategoryName = "Hands",
                            Gold = 55.0,
                            Intelligence = 3,
                            Name = "Steel Dagger",
                            Strength = 53
                        },
                        new
                        {
                            Id = 6,
                            Agility = 50,
                            CategoryName = "Hands",
                            Gold = 200.0,
                            Intelligence = 2,
                            Name = "Ninja Katana",
                            Strength = 200
                        },
                        new
                        {
                            Id = 7,
                            Agility = 19,
                            CategoryName = "Feet",
                            Gold = 5.0,
                            Intelligence = 1,
                            Name = "Sandals",
                            Strength = -4
                        },
                        new
                        {
                            Id = 8,
                            Agility = 43,
                            CategoryName = "Feet",
                            Gold = 50.0,
                            Intelligence = 11,
                            Name = "Leather Boots",
                            Strength = 12
                        },
                        new
                        {
                            Id = 9,
                            Agility = 140,
                            CategoryName = "Feet",
                            Gold = 100.0,
                            Intelligence = 20,
                            Name = "Ninja Boots",
                            Strength = 32
                        },
                        new
                        {
                            Id = 10,
                            Agility = 1,
                            CategoryName = "Necklace",
                            Gold = 2.0,
                            Intelligence = 13,
                            Name = "Bead Necklace",
                            Strength = -5
                        },
                        new
                        {
                            Id = 11,
                            Agility = 10,
                            CategoryName = "Necklace",
                            Gold = 50.0,
                            Intelligence = 26,
                            Name = "Amulet of Health",
                            Strength = 0
                        },
                        new
                        {
                            Id = 12,
                            Agility = 20,
                            CategoryName = "Necklace",
                            Gold = 100.0,
                            Intelligence = 52,
                            Name = "Wisdom Amulet",
                            Strength = 2
                        },
                        new
                        {
                            Id = 13,
                            Agility = 0,
                            CategoryName = "Chest",
                            Gold = 10.0,
                            Intelligence = 2,
                            Name = "Cloth Robe",
                            Strength = 4
                        },
                        new
                        {
                            Id = 14,
                            Agility = -8,
                            CategoryName = "Chest",
                            Gold = 50.0,
                            Intelligence = 3,
                            Name = "Chainmail Armor",
                            Strength = 40
                        },
                        new
                        {
                            Id = 15,
                            Agility = -15,
                            CategoryName = "Chest",
                            Gold = 182.0,
                            Intelligence = 7,
                            Name = "Dragon Scale Armor",
                            Strength = 100
                        },
                        new
                        {
                            Id = 16,
                            Agility = 10,
                            CategoryName = "Ring",
                            Gold = 10.0,
                            Intelligence = 1,
                            Name = "Wooden Ring",
                            Strength = 1
                        },
                        new
                        {
                            Id = 17,
                            Agility = 40,
                            CategoryName = "Ring",
                            Gold = 80.0,
                            Intelligence = 31,
                            Name = "Silver Ring",
                            Strength = 52
                        },
                        new
                        {
                            Id = 18,
                            Agility = 999,
                            CategoryName = "Ring",
                            Gold = 631.0,
                            Intelligence = 999,
                            Name = "Ring of Power",
                            Strength = 999
                        });
                });

            modelBuilder.Entity("ninja_manager.Models.Inventory", b =>
                {
                    b.Property<int>("NinjaId")
                        .HasColumnType("int")
                        .HasColumnName("ninja_id");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int")
                        .HasColumnName("equipment_id");

                    b.Property<double>("Gold")
                        .HasColumnType("float")
                        .HasColumnName("gold");

                    b.HasKey("NinjaId", "EquipmentId");

                    b.HasIndex(new[] { "EquipmentId" }, "IX_inventory_equipment_id");

                    b.ToTable("inventory", (string)null);
                });

            modelBuilder.Entity("ninja_manager.Models.Ninja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Gold")
                        .HasColumnType("float")
                        .HasColumnName("gold");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("ninja", (string)null);
                });

            modelBuilder.Entity("ninja_manager.Models.Equipment", b =>
                {
                    b.HasOne("ninja_manager.Models.Categorie", "CategoryNameNavigation")
                        .WithMany("Equipments")
                        .HasForeignKey("CategoryName")
                        .IsRequired()
                        .HasConstraintName("FK_equipment_categorie");

                    b.Navigation("CategoryNameNavigation");
                });

            modelBuilder.Entity("ninja_manager.Models.Inventory", b =>
                {
                    b.HasOne("ninja_manager.Models.Equipment", "Equipment")
                        .WithMany("Inventories")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_inventory_equipment");

                    b.HasOne("ninja_manager.Models.Ninja", "Ninja")
                        .WithMany("Inventories")
                        .HasForeignKey("NinjaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_inventory_ninja");

                    b.Navigation("Equipment");

                    b.Navigation("Ninja");
                });

            modelBuilder.Entity("ninja_manager.Models.Categorie", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("ninja_manager.Models.Equipment", b =>
                {
                    b.Navigation("Inventories");
                });

            modelBuilder.Entity("ninja_manager.Models.Ninja", b =>
                {
                    b.Navigation("Inventories");
                });
#pragma warning restore 612, 618
        }
    }
}
